trees(),
learn_rate(),
finalize(mtry(), train_data_c),
degree(),
levels = 5)
set.seed(333)
boost_wf_c <- workflow() %>%
add_model(tune_boost) %>%
add_recipe(batter_rec_c)
boost_res_c <- boost_wf_c %>%
tune_grid(
resamples = folds,
grid = boost_grid,
metrics = multi_metric
)
best_boost_c <- boost_res_c %>% select_best("mape")
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
# save(list = 'final_boost_c', file = 'data/tuned_boost_model.rda')
# boost_preds_c <- predict(final_boost_c, test_data_c)
#
# rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
# rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
# mae(test_data_c, Salary_Y, boost_preds_c$.pred)
# mape(test_data_c, Salary_Y, boost_preds_c$.pred)
# rpd(test_data_c, Salary_Y, boost_preds_c$.pred)
# rpiq(test_data_c, Salary_Y, boost_preds_c$.pred)
#
# boost_pred_table_c <- test_data_c %>%
#   mutate(Salary_Pred = boost_preds_c$.pred,
#          Salary_diff = boost_preds_c$.pred - Salary_Y,
#          Per_error = (boost_preds_c$.pred - Salary_Y) / Salary_Y) %>%
#   select(c(Player, MLS_C, Salary_Y, Salary_Pred, Salary_diff, Per_error))
#
# ggplot(boost_pred_table_c, aes(MLS_C, Per_error)) +
#   geom_point()
#
# ggplot(boost_pred_table_c, aes(MLS_C, Salary_diff)) +
#   geom_point()
#
# ggplot(boost_pred_table_c, aes(Salary_Y, Per_error)) +
#   geom_point(aes(color = MLS_C))
#
# ggplot(boost_pred_table_c, aes(Salary_Y, Salary_Pred)) +
#   geom_point() +
#   geom_point(aes(Salary_Y, Salary_Y), color = 'red')
#
# c_boost_results <- c("Curr Boost", rmse(test_data_c, Salary_Y, boost_preds_c$.pred)$.estimate, rsq(test_data_c, Salary_Y, boost_preds_c$.pred)$.estimate,
#                         mae(test_data_c, Salary_Y, boost_preds_c$.pred)$.estimate,
#                         mean(abs((boost_preds_c$.pred - test_data_c$Salary_Y)) / test_data_c$Salary_Y))
## ------------------------------ RF --------------------------------------- ##
tune_rf <-
rand_forest(
trees = tune(),
min_n = tune(),
mtry = tune()
) %>%
set_engine("ranger", num.threads = 5) %>%
set_mode("regression")
rf_grid_c <- grid_regular(trees(),
min_n(),
finalize(mtry(), train_data_c),
degree(),
levels = 5)
set.seed(333)
rf_wf_c <- workflow() %>%
add_model(tune_rf) %>%
add_recipe(batter_rec_c)
rf_res_c <- rf_wf_c %>%
tune_grid(
resamples = folds,
grid = rf_grid_c,
metrics = multi_metric
)
best_rf_c <- rf_res_c %>% select_best("mape")
final_rf_c <- rf_wf_c %>%
finalize_workflow(best_rf_c) %>%
fit(train_data_c)
set.seed(333)
folds <- vfold_cv(train_data_c, 10)
batter_rec_c <-
recipe(Salary_Y ~ ., data = train_data_c) %>%
update_role(Player, new_role = "ID") %>%
step_poly(all_predictors(), degree = tune())
# step_interact(terms = ~ Salary_C:c(WAR_C, Age_C, Salary_change_P1, Salary_change_P2))
boost_grid <- grid_regular(tree_depth(),
trees(),
learn_rate(),
finalize(mtry(), train_data_c),
degree(),
levels = 5)
set.seed(333)
boost_wf_c <- workflow() %>%
add_model(tune_boost) %>%
add_recipe(batter_rec_c)
boost_res_c <- boost_wf_c %>%
tune_grid(
resamples = folds,
grid = boost_grid,
metrics = multi_metric
)
best_boost_c <- boost_res_c %>% select_best("mape")
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
# save(list = 'final_boost_c', file = 'data/tuned_boost_model.rda')
# boost_preds_c <- predict(final_boost_c, test_data_c)
#
# rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
# rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
# mae(test_data_c, Salary_Y, boost_preds_c$.pred)
# mape(test_data_c, Salary_Y, boost_preds_c$.pred)
# rpd(test_data_c, Salary_Y, boost_preds_c$.pred)
# rpiq(test_data_c, Salary_Y, boost_preds_c$.pred)
#
# boost_pred_table_c <- test_data_c %>%
#   mutate(Salary_Pred = boost_preds_c$.pred,
#          Salary_diff = boost_preds_c$.pred - Salary_Y,
#          Per_error = (boost_preds_c$.pred - Salary_Y) / Salary_Y) %>%
#   select(c(Player, MLS_C, Salary_Y, Salary_Pred, Salary_diff, Per_error))
#
# ggplot(boost_pred_table_c, aes(MLS_C, Per_error)) +
#   geom_point()
#
# ggplot(boost_pred_table_c, aes(MLS_C, Salary_diff)) +
#   geom_point()
#
# ggplot(boost_pred_table_c, aes(Salary_Y, Per_error)) +
#   geom_point(aes(color = MLS_C))
#
# ggplot(boost_pred_table_c, aes(Salary_Y, Salary_Pred)) +
#   geom_point() +
#   geom_point(aes(Salary_Y, Salary_Y), color = 'red')
#
# c_boost_results <- c("Curr Boost", rmse(test_data_c, Salary_Y, boost_preds_c$.pred)$.estimate, rsq(test_data_c, Salary_Y, boost_preds_c$.pred)$.estimate,
#                         mae(test_data_c, Salary_Y, boost_preds_c$.pred)$.estimate,
#                         mean(abs((boost_preds_c$.pred - test_data_c$Salary_Y)) / test_data_c$Salary_Y))
## ------------------------------ RF --------------------------------------- ##
tune_rf <-
rand_forest(
trees = tune(),
min_n = tune(),
mtry = tune()
) %>%
set_engine("ranger", num.threads = 5) %>%
set_mode("regression")
rf_grid_c <- grid_regular(trees(),
min_n(),
finalize(mtry(), train_data_c),
degree(),
levels = 5)
set.seed(333)
rf_wf_c <- workflow() %>%
add_model(tune_rf) %>%
add_recipe(batter_rec_c)
rf_res_c <- rf_wf_c %>%
tune_grid(
resamples = folds,
grid = rf_grid_c,
metrics = multi_metric
)
best_rf_c <- rf_res_c %>% select_best("mape")
final_rf_c <- rf_wf_c %>%
finalize_workflow(best_rf_c) %>%
fit(train_data_c)
tune_boost <-
boost_tree(
tree_depth = tune(),
trees = tune(),
learn_rate = tune(),
mtry = tune()
) %>%
set_engine("xgboost", nthread = 5) %>%
set_mode("regression")
batter_rec_c <-
recipe(Salary_Y ~ ., data = train_data_c) %>%
update_role(Player, new_role = "ID") %>%
step_poly(all_predictors(), degree = tune())
# step_interact(terms = ~ Salary_C:c(WAR_C, Age_C, Salary_change_P1, Salary_change_P2))
boost_grid <- grid_regular(tree_depth(),
trees(),
learn_rate(),
finalize(mtry(), train_data_c),
degree(),
levels = 5)
set.seed(333)
boost_wf_c <- workflow() %>%
add_model(tune_boost) %>%
add_recipe(batter_rec_c)
boost_res_c <- boost_wf_c %>%
tune_grid(
resamples = folds,
grid = boost_grid,
metrics = multi_metric
)
best_boost_c <- boost_res_c %>% select_best("mape")
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
# save(list = 'final_boost_c', file = 'data/tuned_boost_model.rda')
# boost_preds_c <- predict(final_boost_c, test_data_c)
#
# rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
# rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
# mae(test_data_c, Salary_Y, boost_preds_c$.pred)
# mape(test_data_c, Salary_Y, boost_preds_c$.pred)
# rpd(test_data_c, Salary_Y, boost_preds_c$.pred)
# rpiq(test_data_c, Salary_Y, boost_preds_c$.pred)
#
# boost_pred_table_c <- test_data_c %>%
#   mutate(Salary_Pred = boost_preds_c$.pred,
#          Salary_diff = boost_preds_c$.pred - Salary_Y,
#          Per_error = (boost_preds_c$.pred - Salary_Y) / Salary_Y) %>%
#   select(c(Player, MLS_C, Salary_Y, Salary_Pred, Salary_diff, Per_error))
#
# ggplot(boost_pred_table_c, aes(MLS_C, Per_error)) +
#   geom_point()
#
# ggplot(boost_pred_table_c, aes(MLS_C, Salary_diff)) +
#   geom_point()
#
# ggplot(boost_pred_table_c, aes(Salary_Y, Per_error)) +
#   geom_point(aes(color = MLS_C))
#
# ggplot(boost_pred_table_c, aes(Salary_Y, Salary_Pred)) +
#   geom_point() +
#   geom_point(aes(Salary_Y, Salary_Y), color = 'red')
#
# c_boost_results <- c("Curr Boost", rmse(test_data_c, Salary_Y, boost_preds_c$.pred)$.estimate, rsq(test_data_c, Salary_Y, boost_preds_c$.pred)$.estimate,
#                         mae(test_data_c, Salary_Y, boost_preds_c$.pred)$.estimate,
#                         mean(abs((boost_preds_c$.pred - test_data_c$Salary_Y)) / test_data_c$Salary_Y))
## ------------------------------ RF --------------------------------------- ##
tune_rf <-
rand_forest(
trees = tune(),
min_n = tune(),
mtry = tune()
) %>%
set_engine("ranger", num.threads = 5) %>%
set_mode("regression")
rf_grid_c <- grid_regular(trees(),
min_n(),
finalize(mtry(), train_data_c),
degree(),
levels = 5)
set.seed(333)
rf_wf_c <- workflow() %>%
add_model(tune_rf) %>%
add_recipe(batter_rec_c)
rf_res_c <- rf_wf_c %>%
tune_grid(
resamples = folds,
grid = rf_grid_c,
metrics = multi_metric
)
best_rf_c <- rf_res_c %>% select_best("mape")
final_rf_c <- rf_wf_c %>%
finalize_workflow(best_rf_c) %>%
fit(train_data_c)
rf_preds_c <- predict(final_rf_c, test_data_c)
rmse(test_data_c, Salary_Y, rf_preds_c$.pred)
rsq(test_data_c, Salary_Y, rf_preds_c$.pred)
mae(test_data_c, Salary_Y, rf_preds_c$.pred)
mape(test_data_c, Salary_Y, rf_preds_c$.pred)
View(best_rf_c)
View(best_boost_c)
boost_preds_c <- predict(final_boost_c, test_data_c)
rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
mae(test_data_c, Salary_Y, boost_preds_c$.pred)
mape(test_data_c, Salary_Y, boost_preds_c$.pred)
best_boost_c <- boost_res_c %>% select_best("rmse")
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
boost_preds_c <- predict(final_boost_c, test_data_c)
rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
mae(test_data_c, Salary_Y, boost_preds_c$.pred)
mape(test_data_c, Salary_Y, boost_preds_c$.pred)
batter_rec_c <-
recipe(Salary_Y ~ ., data = train_data_c) %>%
update_role(Player, new_role = "ID") %>%
step_poly(all_predictors(), degree = 2) %>%
step_interact(terms = ~ Salary_C:c(WAR_C, Age_C, Salary_change_P1, Salary_change_P2))
boost_grid <- grid_regular(tree_depth(),
trees(),
learn_rate(),
finalize(mtry(), train_data_c),
levels = 5)
set.seed(333)
boost_wf_c <- workflow() %>%
add_model(tune_boost) %>%
add_recipe(batter_rec_c)
boost_res_c <- boost_wf_c %>%
tune_grid(
resamples = folds,
grid = boost_grid,
metrics = multi_metric
)
boost_res_c$.notes[[1]]$.notes
batter_dta_c <- batter_dta %>%
mutate(BB_rate_C = as.numeric(str_replace(BB_rate_C, "%", "")),
BB_rate_P1 = as.numeric(str_replace(BB_rate_P1, "%", "")),
BB_rate_P2 = as.numeric(str_replace(BB_rate_P2, "%", "")),
K_rate_C = as.numeric(str_replace(K_rate_C, "%", "")),
K_rate_P1 = as.numeric(str_replace(K_rate_P1, "%", "")),
K_rate_P2 = as.numeric(str_replace(K_rate_P2, "%", "")),
Salary_change_P1 = Salary_C - Salary_P1,
Salary_change_P2 = Salary_P1 - Salary_P2) %>%
select(c(Player, Age_C, PA_C, HR_C, RBI_C, wOBA_C, WAR_C, MLS_C, Salary_C,
PA_P1, HR_P1, RBI_P1, wOBA_P1, WAR_P1, Salary_change_P1,
PA_P2, HR_P2, RBI_P2, wOBA_P2, WAR_P2, Salary_change_P2,
Salary_Y))
batter_c <- as.tibble(batter_dta_c)
set.seed(333)
data_split_c <- initial_split(batter_c, prop = .75)
train_data_c <- training(data_split_c)
test_data_c <- testing(data_split_c)
batter_rec_stand_c <-
recipe(Salary_Y ~ ., data = train_data_c) %>%
update_role(Player, new_role = "ID") %>%
step_center(all_predictors()) %>%
step_scale(all_predictors()) %>%
step_poly(all_predictors(), degree = tune())
# step_interact(terms = ~ Salary_C:c(WAR_C, Age_C, Salary_change_P1, Salary_change_P2))
reg_mod_c <-
linear_reg(penalty = tune(), mixture = tune()) %>%
set_engine("glmnet")
reg_grid_c <- grid_regular(penalty(),
mixture(),
degree(),
levels = 5)
set.seed(333)
folds <- vfold_cv(train_data_c, 10)
set.seed(333)
reg_wf_c <- workflow() %>%
add_model(reg_mod_c) %>%
add_recipe(batter_rec_stand_c)
reg_res_c <-
reg_wf_c %>%
tune_grid(
resamples = folds,
grid = reg_grid_c,
metrics = multi_metric
)
best_reg_c <- reg_res_c %>% select_best("mape")
final_reg_c <- reg_wf_c %>%
finalize_workflow(best_reg_c) %>%
fit(train_data_c)
reg_coefs_c <- final_reg_c %>%
extract_fit_parsnip() %>%
tidy() %>%
mutate(coef_magnitude = abs(estimate)) %>%
select(c('term', 'estimate', 'coef_magnitude'))
View(reg_coefs_c)
batter_rec_c <-
recipe(Salary_Y ~ ., data = train_data_c) %>%
update_role(Player, new_role = "ID") %>%
step_poly(all_predictors(), degree = 2) %>%
step_interact(terms = ~ Salary_C_poly_1:c(WAR_C_poly_1, Age_C_poly_1,
Salary_change_P1_poly_1, Salary_change_P2_poly_1))
boost_grid <- grid_regular(tree_depth(),
trees(),
learn_rate(),
finalize(mtry(), train_data_c),
levels = 5)
set.seed(333)
boost_wf_c <- workflow() %>%
add_model(tune_boost) %>%
add_recipe(batter_rec_c)
boost_res_c <- boost_wf_c %>%
tune_grid(
resamples = folds,
grid = boost_grid,
metrics = multi_metric
)
best_boost_c <- boost_res_c %>% select_best("mape")
View(best_boost_c)
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
boost_preds_c <- predict(final_boost_c, test_data_c)
rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
mae(test_data_c, Salary_Y, boost_preds_c$.pred)
mape(test_data_c, Salary_Y, boost_preds_c$.pred)
best_boost_c <- boost_res_c %>% select_best("rmse")
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
boost_preds_c <- predict(final_boost_c, test_data_c)
rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
mae(test_data_c, Salary_Y, boost_preds_c$.pred)
mape(test_data_c, Salary_Y, boost_preds_c$.pred)
View(best_boost_c)
best_boost_c <- boost_res_c %>% select_best("mape")
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
boost_preds_c <- predict(final_boost_c, test_data_c)
rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
mae(test_data_c, Salary_Y, boost_preds_c$.pred)
mape(test_data_c, Salary_Y, boost_preds_c$.pred)
boost_preds_c <- predict(final_boost_c, test_data_c)
rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
mae(test_data_c, Salary_Y, boost_preds_c$.pred)
mape(test_data_c, Salary_Y, boost_preds_c$.pred)
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
boost_preds_c <- predict(final_boost_c, test_data_c)
rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
mae(test_data_c, Salary_Y, boost_preds_c$.pred)
mape(test_data_c, Salary_Y, boost_preds_c$.pred)
set.seed(333)
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
boost_preds_c <- predict(final_boost_c, test_data_c)
rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
mae(test_data_c, Salary_Y, boost_preds_c$.pred)
mape(test_data_c, Salary_Y, boost_preds_c$.pred)
set.seed(333)
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
boost_preds_c <- predict(final_boost_c, test_data_c)
rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
mae(test_data_c, Salary_Y, boost_preds_c$.pred)
mape(test_data_c, Salary_Y, boost_preds_c$.pred)
best_boost_c <- boost_res_c %>% select_best("rmse")
set.seed(333)
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
boost_preds_c <- predict(final_boost_c, test_data_c)
rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
mae(test_data_c, Salary_Y, boost_preds_c$.pred)
mape(test_data_c, Salary_Y, boost_preds_c$.pred)
best_boost_c <- boost_res_c %>% select_best("mae")
set.seed(333)
final_boost_c <- boost_wf_c %>%
finalize_workflow(best_boost_c) %>%
fit(train_data_c)
boost_preds_c <- predict(final_boost_c, test_data_c)
rmse(test_data_c, Salary_Y, boost_preds_c$.pred)
rsq(test_data_c, Salary_Y, boost_preds_c$.pred)
mae(test_data_c, Salary_Y, boost_preds_c$.pred)
mape(test_data_c, Salary_Y, boost_preds_c$.pred)
save(list = 'final_boost_c', file = 'data/tuned_boost_model.rda')
tune_rf <-
rand_forest(
trees = tune(),
min_n = tune(),
mtry = tune()
) %>%
set_engine("ranger", num.threads = 5) %>%
set_mode("regression")
rf_grid_c <- grid_regular(trees(),
min_n(),
finalize(mtry(), train_data_c),
levels = 5)
set.seed(333)
rf_wf_c <- workflow() %>%
add_model(tune_rf) %>%
add_recipe(batter_rec_c)
rf_res_c <- rf_wf_c %>%
tune_grid(
resamples = folds,
grid = rf_grid_c,
metrics = multi_metric
)
best_rf_c <- rf_res_c %>% select_best("mape")
set.seed(333)
final_rf_c <- rf_wf_c %>%
finalize_workflow(best_rf_c) %>%
fit(train_data_c)
rf_preds_c <- predict(final_rf_c, test_data_c)
rmse(test_data_c, Salary_Y, rf_preds_c$.pred)
rsq(test_data_c, Salary_Y, rf_preds_c$.pred)
mae(test_data_c, Salary_Y, rf_preds_c$.pred)
mape(test_data_c, Salary_Y, rf_preds_c$.pred)
best_rf_c <- rf_res_c %>% select_best("rmse")
set.seed(333)
final_rf_c <- rf_wf_c %>%
finalize_workflow(best_rf_c) %>%
fit(train_data_c)
rf_preds_c <- predict(final_rf_c, test_data_c)
rmse(test_data_c, Salary_Y, rf_preds_c$.pred)
rsq(test_data_c, Salary_Y, rf_preds_c$.pred)
mae(test_data_c, Salary_Y, rf_preds_c$.pred)
mape(test_data_c, Salary_Y, rf_preds_c$.pred)
best_rf_c <- rf_res_c %>% select_best("mape")
set.seed(333)
final_rf_c <- rf_wf_c %>%
finalize_workflow(best_rf_c) %>%
fit(train_data_c)
save(list = 'final_rf_c', file = 'data/tuned_rf_model.rda')
rf_preds_c <- predict(final_rf_c, test_data_c)
rmse(test_data_c, Salary_Y, rf_preds_c$.pred)
rsq(test_data_c, Salary_Y, rf_preds_c$.pred)
mae(test_data_c, Salary_Y, rf_preds_c$.pred)
mape(test_data_c, Salary_Y, rf_preds_c$.pred)
